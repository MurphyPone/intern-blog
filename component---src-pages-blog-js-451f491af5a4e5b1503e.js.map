{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","ArticleDate","MarkerHeader","ReadingTime","IndexPage","_ref2","data","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","allMarkdownRemark","edges","map","_ref3","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","frontmatter","path","css","_ref","date","fields","readingTime","text","author","excerpt","query","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","concat","length","join","defaultProps","array","arrayOf","styled_base_browser_esm","NavLink","Link","HomeLink","SiteHeader","Header","siteTitle","core_browser_esm","GatsbyLink","Footer","Layout","gatsby_browser_entry","react_default","header","layout_Content","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-blog-js-451f491af5a4e5b1503e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: .5em 0 0.5em 0;\n  margin-bottom: 10px;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(26, 178, 53, 0.15),\n    rgba(26, 178, 53, 0.8) 100%,\n    rgba(26, 178, 53, 0.25)\n  );\n`\n\n\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <h1>Blog</h1>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.frontmatter.path}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n              <div>\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                <ReadingTime> by {node.frontmatter.author}</ReadingTime>\n              </div>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n            author\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">Home</HomeLink>\n        <NavLink to=\"/blog\">{siteTitle}</NavLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}, Built with love and \n            {` `}\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}